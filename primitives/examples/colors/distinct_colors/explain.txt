
In uni I've created a 3D function that maps a [0,1] scale value to the appropriate RGB value in the rainbow scale.

HSL and HSV are color systems used by designer, paint softwares and color pickers in general. In contrast to RBG these were designed for humans to pick colors. The problem is that randomly picking points in this coordinate system is flawed: equally-spaced color points will not be equally perceptually different for the human eye. From stackoverflow:

"Even discounting various forms of colorblindness, this is not true for most people: the difference between 120° (green) and 135° (very slightly mint green) is imperceptible, while the difference between 30° (orange) and 45° (peach) is quite obvious."


YUV is a color coordinate system designed for this very problem: 
https://en.wikipedia.org/wiki/YUV
"The Y′UV model defines a color space in terms of one luma (Y′) and two chrominance (UV) components". Luma is analogous for lightness. I can't really explain chrominance, so here's an image from wiki: https://en.wikipedia.org/wiki/Chrominance



Therefore, tldr: take a circle on the YUV plane, breaking it into a fixed amount of points (let's loop through its angles by a divisor of 2PI) should result visually distinctive colours.

Also:
http://softpixel.com/~cwright/programming/colorspace/yuv/